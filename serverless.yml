service: serverless-music-gear

frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    POWERTOOLS_SERVICE_NAME: ${self:service}
    POWERTOOLS_METRICS_NAMESPACE: ${self:service}
  tracing:
    lambda: true
    apiGateway: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

package:
  individually: true

functions:
  create:
    handler: src/handlers/api/rentals.create
    events:
      - http:
          path: rentals
          method: post
          cors: true

  list:
    handler: src/handlers/api/rentals.list
    events:
      - http:
          path: rentals
          method: get
          cors: true

  get:
    handler: src/handlers/api/rentals.get
    events:
      - http:
          path: rentals/{id}
          method: get
          cors: true

  update:
    handler: src/handlers/api/rentals.update
    events:
      - http:
          path: rentals/{id}
          method: put
          cors: true

  delete:
    handler: src/handlers/api/rentals.remove
    events:
      - http:
          path: rentals/{id}
          method: delete
          cors: true

resources:
  Resources: ${file(./resources/database.yml)}

plugins:
  - serverless-esbuild
